<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    
    <title>Computational Investing Part I — PyAlgoTrade 0.10 documentation</title>
    
    <link rel="stylesheet" href="Computational%20Investing%20Part%20I%20%E2%80%94%20PyAlgoTrade%200.10%20documentation_files/default.css" type="text/css">
    <link rel="stylesheet" href="Computational%20Investing%20Part%20I%20%E2%80%94%20PyAlgoTrade%200.10%20documentation_files/pygments.css" type="text/css">
    
    <script src="Computational%20Investing%20Part%20I%20%E2%80%94%20PyAlgoTrade%200.10%20documentation_files/ga.js" async="" type="text/javascript"></script><script type="text/javascript">
      var DOCUMENTATION_OPTIONS = {
        URL_ROOT:    '',
        VERSION:     '0.10',
        COLLAPSE_INDEX: false,
        FILE_SUFFIX: '.html',
        HAS_SOURCE:  true
      };
    </script>
    <script type="text/javascript" src="Computational%20Investing%20Part%20I%20%E2%80%94%20PyAlgoTrade%200.10%20documentation_files/jquery.js"></script>
    <script type="text/javascript" src="Computational%20Investing%20Part%20I%20%E2%80%94%20PyAlgoTrade%200.10%20documentation_files/underscore.js"></script>
    <script type="text/javascript" src="Computational%20Investing%20Part%20I%20%E2%80%94%20PyAlgoTrade%200.10%20documentation_files/doctools.js"></script>
    <link rel="top" title="PyAlgoTrade 0.10 documentation" href="http://gbeced.github.com/pyalgotrade/docs/v0.10/html/index.html">
    <link rel="prev" title="TA-Lib integration" href="http://gbeced.github.com/pyalgotrade/docs/v0.10/html/talib.html">
 

<!-- Google analytics -->
<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-1180709-11']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
<!-- End Google analytics -->


  </head>
  <body>
    <div class="related">
      <h3>Navigation</h3>
      <ul>
        <li class="right" style="margin-right: 10px">
          <a href="http://gbeced.github.com/pyalgotrade/docs/v0.10/html/genindex.html" title="General Index" accesskey="I">index</a></li>
        <li class="right">
          <a href="http://gbeced.github.com/pyalgotrade/docs/v0.10/html/py-modindex.html" title="Python Module Index">modules</a> |</li>
        <li class="right">
          <a href="http://gbeced.github.com/pyalgotrade/docs/v0.10/html/talib.html" title="TA-Lib integration" accesskey="P">previous</a> |</li>
        <li><a href="http://gbeced.github.com/pyalgotrade/docs/v0.10/html/index.html">PyAlgoTrade 0.10 documentation</a> »</li> 
      </ul>
    </div>  

    <div class="document">
      <div class="documentwrapper">
        <div class="bodywrapper">
          <div class="body">
            
  <div class="section" id="computational-investing-part-i">
<h1>Computational Investing Part I<a class="headerlink" href="#computational-investing-part-i" title="Permalink to this headline">¶</a></h1>
<p>As I was taking the <a class="reference external" href="https://class.coursera.org/compinvesting1-2012-001/class">Computational Investing Part I</a> course in 2012
I had to work on a set of assignments and for some of them I used PyAlgoTrade.</p>
<div class="section" id="homework-1">
<h2>Homework 1<a class="headerlink" href="#homework-1" title="Permalink to this headline">¶</a></h2>
<p>For this assignment I had to pick 4 stocks, invest a total of $100000 during 2011, and calculate:</p>
<blockquote>
<div><ul class="simple">
<li>Final portfolio value</li>
<li>Anual return</li>
<li>Average daily return</li>
<li>Std. dev. of daily returns</li>
<li>Sharpe ratio</li>
</ul>
</div></blockquote>
<p>Although the deliverable was an Excel spreadsheet, I validated the results using this piece of code:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="kn">from</span> <span class="nn">pyalgotrade</span> <span class="kn">import</span> <span class="n">strategy</span>
<span class="kn">from</span> <span class="nn">pyalgotrade.barfeed</span> <span class="kn">import</span> <span class="n">yahoofeed</span>
<span class="kn">from</span> <span class="nn">pyalgotrade.stratanalyzer</span> <span class="kn">import</span> <span class="n">returns</span>
<span class="kn">from</span> <span class="nn">pyalgotrade.stratanalyzer</span> <span class="kn">import</span> <span class="n">sharpe</span>
<span class="kn">from</span> <span class="nn">pyalgotrade</span> <span class="kn">import</span> <span class="n">broker</span>
<span class="kn">from</span> <span class="nn">pyalgotrade.utils</span> <span class="kn">import</span> <span class="n">stats</span>

<span class="k">class</span> <span class="nc">MyStrategy</span><span class="p">(</span><span class="n">strategy</span><span class="o">.</span><span class="n">Strategy</span><span class="p">):</span>
	<span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">feed</span><span class="p">):</span>
		<span class="n">strategy</span><span class="o">.</span><span class="n">Strategy</span><span class="o">.</span><span class="n">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">feed</span><span class="p">,</span> <span class="mi">1000000</span><span class="p">)</span>

		<span class="c"># We wan't to use adjusted close prices instead of close.</span>
		<span class="bp">self</span><span class="o">.</span><span class="n">getBroker</span><span class="p">()</span><span class="o">.</span><span class="n">setUseAdjustedValues</span><span class="p">(</span><span class="bp">True</span><span class="p">)</span>

		<span class="c"># Place the orders to get them processed on the first bar.</span>
		<span class="n">orders</span> <span class="o">=</span> <span class="p">{</span>
			<span class="s">"aeti"</span><span class="p">:</span> <span class="mi">297810</span><span class="p">,</span>
			<span class="s">"egan"</span><span class="p">:</span> <span class="mi">81266</span><span class="p">,</span>
			<span class="s">"glng"</span><span class="p">:</span> <span class="mi">11095</span><span class="p">,</span>
			<span class="s">"simo"</span><span class="p">:</span> <span class="mi">17293</span><span class="p">,</span>
		<span class="p">}</span>
		<span class="k">for</span> <span class="n">instrument</span><span class="p">,</span> <span class="n">quantity</span> <span class="ow">in</span> <span class="n">orders</span><span class="o">.</span><span class="n">items</span><span class="p">():</span>
			<span class="n">o</span> <span class="o">=</span>  <span class="bp">self</span><span class="o">.</span><span class="n">getBroker</span><span class="p">()</span><span class="o">.</span><span class="n">createMarketOrder</span><span class="p">(</span><span class="n">broker</span><span class="o">.</span><span class="n">Order</span><span class="o">.</span><span class="n">Action</span><span class="o">.</span><span class="n">BUY</span><span class="p">,</span> <span class="n">instrument</span><span class="p">,</span> <span class="n">quantity</span><span class="p">,</span> <span class="n">onClose</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
			<span class="bp">self</span><span class="o">.</span><span class="n">getBroker</span><span class="p">()</span><span class="o">.</span><span class="n">placeOrder</span><span class="p">(</span><span class="n">o</span><span class="p">)</span>

	<span class="k">def</span> <span class="nf">onBars</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">bars</span><span class="p">):</span>
		<span class="k">pass</span>

<span class="c"># Load the yahoo feed from CSV files.</span>
<span class="n">feed</span> <span class="o">=</span> <span class="n">yahoofeed</span><span class="o">.</span><span class="n">Feed</span><span class="p">()</span>
<span class="n">feed</span><span class="o">.</span><span class="n">addBarsFromCSV</span><span class="p">(</span><span class="s">"aeti"</span><span class="p">,</span> <span class="s">"aeti-2011-yahoofinance.csv"</span><span class="p">)</span>
<span class="n">feed</span><span class="o">.</span><span class="n">addBarsFromCSV</span><span class="p">(</span><span class="s">"egan"</span><span class="p">,</span> <span class="s">"egan-2011-yahoofinance.csv"</span><span class="p">)</span>
<span class="n">feed</span><span class="o">.</span><span class="n">addBarsFromCSV</span><span class="p">(</span><span class="s">"glng"</span><span class="p">,</span> <span class="s">"glng-2011-yahoofinance.csv"</span><span class="p">)</span>
<span class="n">feed</span><span class="o">.</span><span class="n">addBarsFromCSV</span><span class="p">(</span><span class="s">"simo"</span><span class="p">,</span> <span class="s">"simo-2011-yahoofinance.csv"</span><span class="p">)</span>

<span class="c"># Evaluate the strategy with the feed's bars.</span>
<span class="n">myStrategy</span> <span class="o">=</span> <span class="n">MyStrategy</span><span class="p">(</span><span class="n">feed</span><span class="p">)</span>

<span class="c"># Attach returns and sharpe ratio analyzers.</span>
<span class="n">retAnalyzer</span> <span class="o">=</span> <span class="n">returns</span><span class="o">.</span><span class="n">Returns</span><span class="p">()</span>
<span class="n">myStrategy</span><span class="o">.</span><span class="n">attachAnalyzer</span><span class="p">(</span><span class="n">retAnalyzer</span><span class="p">)</span>
<span class="n">sharpeRatioAnalyzer</span> <span class="o">=</span> <span class="n">sharpe</span><span class="o">.</span><span class="n">SharpeRatio</span><span class="p">()</span>
<span class="n">myStrategy</span><span class="o">.</span><span class="n">attachAnalyzer</span><span class="p">(</span><span class="n">sharpeRatioAnalyzer</span><span class="p">)</span>

<span class="c"># Run the strategy</span>
<span class="n">myStrategy</span><span class="o">.</span><span class="n">run</span><span class="p">()</span>

<span class="c"># Print the results.</span>
<span class="k">print</span> <span class="s">"Final portfolio value: $</span><span class="si">%.2f</span><span class="s">"</span> <span class="o">%</span> <span class="n">myStrategy</span><span class="o">.</span><span class="n">getResult</span><span class="p">()</span>
<span class="k">print</span> <span class="s">"Anual return: </span><span class="si">%.2f</span><span class="s"> </span><span class="si">%%</span><span class="s">"</span> <span class="o">%</span> <span class="p">(</span><span class="n">retAnalyzer</span><span class="o">.</span><span class="n">getCumulativeReturns</span><span class="p">()[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">*</span> <span class="mi">100</span><span class="p">)</span>
<span class="k">print</span> <span class="s">"Average daily return: </span><span class="si">%.2f</span><span class="s"> </span><span class="si">%%</span><span class="s">"</span> <span class="o">%</span> <span class="p">(</span><span class="n">stats</span><span class="o">.</span><span class="n">mean</span><span class="p">(</span><span class="n">retAnalyzer</span><span class="o">.</span><span class="n">getReturns</span><span class="p">())</span> <span class="o">*</span> <span class="mi">100</span><span class="p">)</span>
<span class="k">print</span> <span class="s">"Std. dev. daily return: </span><span class="si">%.4f</span><span class="s">"</span> <span class="o">%</span> <span class="p">(</span><span class="n">stats</span><span class="o">.</span><span class="n">stddev</span><span class="p">(</span><span class="n">retAnalyzer</span><span class="o">.</span><span class="n">getReturns</span><span class="p">()))</span>
<span class="k">print</span> <span class="s">"Sharpe ratio: </span><span class="si">%.2f</span><span class="s">"</span> <span class="o">%</span> <span class="p">(</span><span class="n">sharpeRatioAnalyzer</span><span class="o">.</span><span class="n">getSharpeRatio</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">252</span><span class="p">))</span>
</pre></div>
</div>
<p>The results were:</p>
<div class="highlight-python"><pre>Final portfolio value: $2917766.47
Anual return: 191.78 %
Average daily return: 0.44 %
Std. dev. daily return: 0.0186
Sharpe ratio: 3.78
</pre>
</div>
</div>
<div class="section" id="homework-3-and-4">
<h2>Homework 3 and 4<a class="headerlink" href="#homework-3-and-4" title="Permalink to this headline">¶</a></h2>
<p>For these assignments I had to build a market simulation tool that loads orders from a file, executes those,
and prints the results for each day.</p>
<p>The orders file for homework 3 look like this:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="mi">2011</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="n">AAPL</span><span class="p">,</span><span class="n">Buy</span><span class="p">,</span><span class="mi">1500</span><span class="p">,</span>
<span class="mi">2011</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">13</span><span class="p">,</span><span class="n">AAPL</span><span class="p">,</span><span class="n">Sell</span><span class="p">,</span><span class="mi">1500</span><span class="p">,</span>
<span class="mi">2011</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">13</span><span class="p">,</span><span class="n">IBM</span><span class="p">,</span><span class="n">Buy</span><span class="p">,</span><span class="mi">4000</span><span class="p">,</span>
<span class="mi">2011</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">26</span><span class="p">,</span><span class="n">GOOG</span><span class="p">,</span><span class="n">Buy</span><span class="p">,</span><span class="mi">1000</span><span class="p">,</span>
<span class="mi">2011</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="n">XOM</span><span class="p">,</span><span class="n">Sell</span><span class="p">,</span><span class="mi">4000</span><span class="p">,</span>
<span class="mi">2011</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="n">XOM</span><span class="p">,</span><span class="n">Buy</span><span class="p">,</span><span class="mi">4000</span><span class="p">,</span>
<span class="mi">2011</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="n">GOOG</span><span class="p">,</span><span class="n">Sell</span><span class="p">,</span><span class="mi">1000</span><span class="p">,</span>
<span class="mi">2011</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="n">IBM</span><span class="p">,</span><span class="n">Sell</span><span class="p">,</span><span class="mi">2200</span><span class="p">,</span>
<span class="mi">2011</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="n">IBM</span><span class="p">,</span><span class="n">Sell</span><span class="p">,</span><span class="mi">3300</span><span class="p">,</span>
<span class="mi">2011</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="n">IBM</span><span class="p">,</span><span class="n">Buy</span><span class="p">,</span><span class="mi">1500</span><span class="p">,</span>
<span class="mi">2011</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="n">AAPL</span><span class="p">,</span><span class="n">Buy</span><span class="p">,</span><span class="mi">1200</span><span class="p">,</span>
<span class="mi">2011</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="n">GOOG</span><span class="p">,</span><span class="n">Buy</span><span class="p">,</span><span class="mi">55</span><span class="p">,</span>
<span class="mi">2011</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="n">GOOG</span><span class="p">,</span><span class="n">Sell</span><span class="p">,</span><span class="mi">55</span><span class="p">,</span>
<span class="mi">2011</span><span class="p">,</span><span class="mi">12</span><span class="p">,</span><span class="mi">20</span><span class="p">,</span><span class="n">AAPL</span><span class="p">,</span><span class="n">Sell</span><span class="p">,</span><span class="mi">1200</span><span class="p">,</span>
</pre></div>
</div>
<p>This is the market simulation tool that I built:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="kn">import</span> <span class="nn">csv</span>
<span class="kn">import</span> <span class="nn">datetime</span>
<span class="kn">import</span> <span class="nn">os</span>

<span class="kn">from</span> <span class="nn">pyalgotrade.barfeed</span> <span class="kn">import</span> <span class="n">yahoofeed</span>
<span class="kn">from</span> <span class="nn">pyalgotrade.barfeed</span> <span class="kn">import</span> <span class="n">csvfeed</span>
<span class="kn">from</span> <span class="nn">pyalgotrade</span> <span class="kn">import</span> <span class="n">strategy</span>
<span class="kn">from</span> <span class="nn">pyalgotrade</span> <span class="kn">import</span> <span class="n">broker</span>
<span class="kn">from</span> <span class="nn">pyalgotrade.utils</span> <span class="kn">import</span> <span class="n">stats</span>
<span class="kn">from</span> <span class="nn">pyalgotrade.stratanalyzer</span> <span class="kn">import</span> <span class="n">returns</span>
<span class="kn">from</span> <span class="nn">pyalgotrade.stratanalyzer</span> <span class="kn">import</span> <span class="n">sharpe</span>

<span class="k">class</span> <span class="nc">OrdersFile</span><span class="p">:</span>
	<span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">ordersFile</span><span class="p">):</span>
		<span class="bp">self</span><span class="o">.</span><span class="n">__orders</span> <span class="o">=</span> <span class="p">{}</span>
		<span class="bp">self</span><span class="o">.</span><span class="n">__firstDate</span> <span class="o">=</span> <span class="bp">None</span>
		<span class="bp">self</span><span class="o">.</span><span class="n">__lastDate</span> <span class="o">=</span> <span class="bp">None</span>
		<span class="bp">self</span><span class="o">.</span><span class="n">__instruments</span> <span class="o">=</span> <span class="p">[]</span>

		<span class="c"># Load orders from the file.</span>
		<span class="n">reader</span> <span class="o">=</span> <span class="n">csv</span><span class="o">.</span><span class="n">DictReader</span><span class="p">(</span><span class="nb">open</span><span class="p">(</span><span class="n">ordersFile</span><span class="p">,</span> <span class="s">"r"</span><span class="p">),</span> <span class="n">fieldnames</span><span class="o">=</span><span class="p">[</span><span class="s">"year"</span><span class="p">,</span> <span class="s">"month"</span><span class="p">,</span> <span class="s">"day"</span><span class="p">,</span> <span class="s">"symbol"</span><span class="p">,</span> <span class="s">"action"</span><span class="p">,</span> <span class="s">"qty"</span><span class="p">])</span>
		<span class="k">for</span> <span class="n">row</span> <span class="ow">in</span> <span class="n">reader</span><span class="p">:</span>
			<span class="n">dateTime</span> <span class="o">=</span> <span class="n">datetime</span><span class="o">.</span><span class="n">datetime</span><span class="p">(</span><span class="nb">int</span><span class="p">(</span><span class="n">row</span><span class="p">[</span><span class="s">"year"</span><span class="p">]),</span> <span class="nb">int</span><span class="p">(</span><span class="n">row</span><span class="p">[</span><span class="s">"month"</span><span class="p">]),</span> <span class="nb">int</span><span class="p">(</span><span class="n">row</span><span class="p">[</span><span class="s">"day"</span><span class="p">]))</span>
			<span class="bp">self</span><span class="o">.</span><span class="n">__orders</span><span class="o">.</span><span class="n">setdefault</span><span class="p">(</span><span class="n">dateTime</span><span class="p">,</span> <span class="p">[])</span>
			<span class="n">order</span> <span class="o">=</span> <span class="p">(</span><span class="n">row</span><span class="p">[</span><span class="s">"symbol"</span><span class="p">],</span> <span class="n">row</span><span class="p">[</span><span class="s">"action"</span><span class="p">],</span> <span class="nb">int</span><span class="p">(</span><span class="n">row</span><span class="p">[</span><span class="s">"qty"</span><span class="p">]))</span>
			<span class="bp">self</span><span class="o">.</span><span class="n">__orders</span><span class="p">[</span><span class="n">dateTime</span><span class="p">]</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">order</span><span class="p">)</span>

			<span class="c"># As we process the file, store instruments, first date, and last date.</span>
			<span class="k">if</span> <span class="n">row</span><span class="p">[</span><span class="s">"symbol"</span><span class="p">]</span> <span class="ow">not</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">__instruments</span><span class="p">:</span>
				<span class="bp">self</span><span class="o">.</span><span class="n">__instruments</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">row</span><span class="p">[</span><span class="s">"symbol"</span><span class="p">])</span>

			<span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">__firstDate</span> <span class="o">==</span> <span class="bp">None</span><span class="p">:</span>
				<span class="bp">self</span><span class="o">.</span><span class="n">__firstDate</span> <span class="o">=</span> <span class="n">dateTime</span>
			<span class="k">else</span><span class="p">:</span>
				<span class="bp">self</span><span class="o">.</span><span class="n">__firstDate</span> <span class="o">=</span> <span class="nb">min</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">__firstDate</span><span class="p">,</span> <span class="n">dateTime</span><span class="p">)</span>

			<span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">__lastDate</span> <span class="o">==</span> <span class="bp">None</span><span class="p">:</span>
				<span class="bp">self</span><span class="o">.</span><span class="n">__lastDate</span> <span class="o">=</span> <span class="n">dateTime</span>
			<span class="k">else</span><span class="p">:</span>
				<span class="bp">self</span><span class="o">.</span><span class="n">__lastDate</span> <span class="o">=</span> <span class="nb">max</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">__lastDate</span><span class="p">,</span> <span class="n">dateTime</span><span class="p">)</span>

	<span class="k">def</span> <span class="nf">getFirstDate</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
		<span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">__firstDate</span>

	<span class="k">def</span> <span class="nf">getLastDate</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
		<span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">__lastDate</span>

	<span class="k">def</span> <span class="nf">getInstruments</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
		<span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">__instruments</span>

	<span class="k">def</span> <span class="nf">getOrders</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">dateTime</span><span class="p">):</span>
		<span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">__orders</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">dateTime</span><span class="p">,</span> <span class="p">[])</span>

<span class="k">class</span> <span class="nc">MyStrategy</span><span class="p">(</span><span class="n">strategy</span><span class="o">.</span><span class="n">Strategy</span><span class="p">):</span>
	<span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">feed</span><span class="p">,</span> <span class="n">cash</span><span class="p">,</span> <span class="n">ordersFile</span><span class="p">,</span> <span class="n">useAdjustedClose</span><span class="p">):</span>
		<span class="c"># Suscribe to the feed bars event before the broker just to place the orders properly.</span>
		<span class="n">feed</span><span class="o">.</span><span class="n">getNewBarsEvent</span><span class="p">()</span><span class="o">.</span><span class="n">subscribe</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">__onBarsBeforeBroker</span><span class="p">)</span>
		<span class="n">strategy</span><span class="o">.</span><span class="n">Strategy</span><span class="o">.</span><span class="n">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">feed</span><span class="p">,</span> <span class="n">cash</span><span class="p">)</span>
		<span class="bp">self</span><span class="o">.</span><span class="n">__ordersFile</span> <span class="o">=</span> <span class="n">ordersFile</span>
		<span class="bp">self</span><span class="o">.</span><span class="n">getBroker</span><span class="p">()</span><span class="o">.</span><span class="n">setUseAdjustedValues</span><span class="p">(</span><span class="n">useAdjustedClose</span><span class="p">)</span>
		<span class="c"># We will allow buying more shares than cash allows.</span>
		<span class="bp">self</span><span class="o">.</span><span class="n">getBroker</span><span class="p">()</span><span class="o">.</span><span class="n">setAllowNegativeCash</span><span class="p">(</span><span class="bp">True</span><span class="p">)</span>

	<span class="k">def</span> <span class="nf">__onBarsBeforeBroker</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">bars</span><span class="p">):</span>
		<span class="k">for</span> <span class="n">instrument</span><span class="p">,</span> <span class="n">action</span><span class="p">,</span> <span class="n">quantity</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">__ordersFile</span><span class="o">.</span><span class="n">getOrders</span><span class="p">(</span><span class="n">bars</span><span class="o">.</span><span class="n">getDateTime</span><span class="p">()):</span>
			<span class="k">if</span> <span class="n">action</span><span class="o">.</span><span class="n">lower</span><span class="p">()</span> <span class="o">==</span> <span class="s">"buy"</span><span class="p">:</span>
				<span class="n">action</span> <span class="o">=</span> <span class="n">broker</span><span class="o">.</span><span class="n">Order</span><span class="o">.</span><span class="n">Action</span><span class="o">.</span><span class="n">BUY</span>
			<span class="k">else</span><span class="p">:</span>
				<span class="n">action</span> <span class="o">=</span> <span class="n">broker</span><span class="o">.</span><span class="n">Order</span><span class="o">.</span><span class="n">Action</span><span class="o">.</span><span class="n">SELL</span>
			<span class="n">o</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">getBroker</span><span class="p">()</span><span class="o">.</span><span class="n">createMarketOrder</span><span class="p">(</span><span class="n">action</span><span class="p">,</span> <span class="n">instrument</span><span class="p">,</span> <span class="n">quantity</span><span class="p">,</span> <span class="n">onClose</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
			<span class="bp">self</span><span class="o">.</span><span class="n">getBroker</span><span class="p">()</span><span class="o">.</span><span class="n">placeOrder</span><span class="p">(</span><span class="n">o</span><span class="p">)</span>

	<span class="k">def</span> <span class="nf">onOrderUpdated</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">order</span><span class="p">):</span>
		<span class="n">execInfo</span> <span class="o">=</span> <span class="n">order</span><span class="o">.</span><span class="n">getExecutionInfo</span><span class="p">()</span>
		<span class="k">if</span> <span class="ow">not</span> <span class="n">execInfo</span><span class="p">:</span>
			<span class="k">raise</span> <span class="ne">Exception</span><span class="p">(</span><span class="s">"Order canceled. Ran out of cash ?"</span><span class="p">)</span>

	<span class="k">def</span> <span class="nf">onBars</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">bars</span><span class="p">):</span>
		<span class="n">portfolioValue</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">getBroker</span><span class="p">()</span><span class="o">.</span><span class="n">getEquity</span><span class="p">()</span>
		<span class="k">print</span> <span class="s">"</span><span class="si">%s</span><span class="s">: Portfolio value: $</span><span class="si">%.2f</span><span class="s">"</span> <span class="o">%</span> <span class="p">(</span><span class="n">bars</span><span class="o">.</span><span class="n">getDateTime</span><span class="p">(),</span> <span class="n">portfolioValue</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
	<span class="c"># Load the orders file.</span>
	<span class="n">ordersFile</span> <span class="o">=</span> <span class="n">OrdersFile</span><span class="p">(</span><span class="s">"orders.csv"</span><span class="p">)</span>
	<span class="k">print</span> <span class="s">"First date"</span><span class="p">,</span> <span class="n">ordersFile</span><span class="o">.</span><span class="n">getFirstDate</span><span class="p">()</span>
	<span class="k">print</span> <span class="s">"Last date"</span><span class="p">,</span> <span class="n">ordersFile</span><span class="o">.</span><span class="n">getLastDate</span><span class="p">()</span>
	<span class="k">print</span> <span class="s">"Symbols"</span><span class="p">,</span> <span class="n">ordersFile</span><span class="o">.</span><span class="n">getInstruments</span><span class="p">()</span>

	<span class="c"># Load the data from QSTK storage. QS environment variable has to be defined.</span>
	<span class="n">feed</span> <span class="o">=</span> <span class="n">yahoofeed</span><span class="o">.</span><span class="n">Feed</span><span class="p">()</span>
	<span class="n">feed</span><span class="o">.</span><span class="n">setBarFilter</span><span class="p">(</span><span class="n">csvfeed</span><span class="o">.</span><span class="n">DateRangeFilter</span><span class="p">(</span><span class="n">ordersFile</span><span class="o">.</span><span class="n">getFirstDate</span><span class="p">(),</span> <span class="n">ordersFile</span><span class="o">.</span><span class="n">getLastDate</span><span class="p">()))</span>
	<span class="n">feed</span><span class="o">.</span><span class="n">setDailyBarTime</span><span class="p">(</span><span class="n">datetime</span><span class="o">.</span><span class="n">time</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">))</span> <span class="c"># This is to match the dates loaded with the ones in the orders file.</span>
	<span class="k">for</span> <span class="n">symbol</span> <span class="ow">in</span> <span class="n">ordersFile</span><span class="o">.</span><span class="n">getInstruments</span><span class="p">():</span>
		<span class="n">feed</span><span class="o">.</span><span class="n">addBarsFromCSV</span><span class="p">(</span><span class="n">symbol</span><span class="p">,</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">getenv</span><span class="p">(</span><span class="s">"QS"</span><span class="p">),</span> <span class="s">"QSData"</span><span class="p">,</span> <span class="s">"Yahoo"</span><span class="p">,</span> <span class="n">symbol</span> <span class="o">+</span> <span class="s">".csv"</span><span class="p">))</span>

	<span class="c"># Run the strategy.</span>
	<span class="n">cash</span> <span class="o">=</span> <span class="mi">1000000</span>
	<span class="n">useAdjustedClose</span> <span class="o">=</span> <span class="bp">True</span>
	<span class="n">myStrategy</span> <span class="o">=</span> <span class="n">MyStrategy</span><span class="p">(</span><span class="n">feed</span><span class="p">,</span> <span class="n">cash</span><span class="p">,</span> <span class="n">ordersFile</span><span class="p">,</span> <span class="n">useAdjustedClose</span><span class="p">)</span>

	<span class="c"># Attach returns and sharpe ratio analyzers.</span>
	<span class="n">retAnalyzer</span> <span class="o">=</span> <span class="n">returns</span><span class="o">.</span><span class="n">Returns</span><span class="p">()</span>
	<span class="n">myStrategy</span><span class="o">.</span><span class="n">attachAnalyzer</span><span class="p">(</span><span class="n">retAnalyzer</span><span class="p">)</span>
	<span class="n">sharpeRatioAnalyzer</span> <span class="o">=</span> <span class="n">sharpe</span><span class="o">.</span><span class="n">SharpeRatio</span><span class="p">()</span>
	<span class="n">myStrategy</span><span class="o">.</span><span class="n">attachAnalyzer</span><span class="p">(</span><span class="n">sharpeRatioAnalyzer</span><span class="p">)</span>

	<span class="n">myStrategy</span><span class="o">.</span><span class="n">run</span><span class="p">()</span>

	<span class="c"># Print the results.</span>
	<span class="k">print</span> <span class="s">"Final portfolio value: $</span><span class="si">%.2f</span><span class="s">"</span> <span class="o">%</span> <span class="n">myStrategy</span><span class="o">.</span><span class="n">getResult</span><span class="p">()</span>
	<span class="k">print</span> <span class="s">"Anual return: </span><span class="si">%.2f</span><span class="s"> </span><span class="si">%%</span><span class="s">"</span> <span class="o">%</span> <span class="p">(</span><span class="n">retAnalyzer</span><span class="o">.</span><span class="n">getCumulativeReturns</span><span class="p">()[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">*</span> <span class="mi">100</span><span class="p">)</span>
	<span class="k">print</span> <span class="s">"Average daily return: </span><span class="si">%.2f</span><span class="s"> </span><span class="si">%%</span><span class="s">"</span> <span class="o">%</span> <span class="p">(</span><span class="n">stats</span><span class="o">.</span><span class="n">mean</span><span class="p">(</span><span class="n">retAnalyzer</span><span class="o">.</span><span class="n">getReturns</span><span class="p">())</span> <span class="o">*</span> <span class="mi">100</span><span class="p">)</span>
	<span class="k">print</span> <span class="s">"Std. dev. daily return: </span><span class="si">%.4f</span><span class="s">"</span> <span class="o">%</span> <span class="p">(</span><span class="n">stats</span><span class="o">.</span><span class="n">stddev</span><span class="p">(</span><span class="n">retAnalyzer</span><span class="o">.</span><span class="n">getReturns</span><span class="p">()))</span>
	<span class="k">print</span> <span class="s">"Sharpe ratio: </span><span class="si">%.2f</span><span class="s">"</span> <span class="o">%</span> <span class="p">(</span><span class="n">sharpeRatioAnalyzer</span><span class="o">.</span><span class="n">getSharpeRatio</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">252</span><span class="p">))</span>

<span class="n">main</span><span class="p">()</span>
</pre></div>
</div>
<p>The output for homework 3 looks like this:</p>
<div class="highlight-python"><pre>First date 2011-01-10 00:00:00
Last date 2011-12-20 00:00:00
Symbols ['AAPL', 'IBM', 'GOOG', 'XOM']
2011-01-10 00:00:00: Portfolio value: $1000000.00
2011-01-11 00:00:00: Portfolio value: $998785.00
2011-01-12 00:00:00: Portfolio value: $1002940.00
2011-01-13 00:00:00: Portfolio value: $1004815.00
.
.
.
2011-12-15 00:00:00: Portfolio value: $1113532.00
2011-12-16 00:00:00: Portfolio value: $1116016.00
2011-12-19 00:00:00: Portfolio value: $1117444.00
2011-12-20 00:00:00: Portfolio value: $1133860.00
Final portfolio value: $1133860.00
Anual return: 13.39 %
Average daily return: 0.05 %
Std. dev. daily return: 0.0072
Sharpe ratio: 1.21</pre>
</div>
</div>
</div>


          </div>
        </div>
      </div>
      <div class="sphinxsidebar">
        <div class="sphinxsidebarwrapper">
  <h3><a href="http://gbeced.github.com/pyalgotrade/docs/v0.10/html/index.html">Table Of Contents</a></h3>
  <ul>
<li><a class="reference internal" href="#">Computational Investing Part I</a><ul>
<li><a class="reference internal" href="#homework-1">Homework 1</a></li>
<li><a class="reference internal" href="#homework-3-and-4">Homework 3 and 4</a></li>
</ul>
</li>
</ul>

  <h4>Previous topic</h4>
  <p class="topless"><a href="http://gbeced.github.com/pyalgotrade/docs/v0.10/html/talib.html" title="previous chapter">TA-Lib integration</a></p>
  <h3>This Page</h3>
  <ul class="this-page-menu">
    <li><a href="http://gbeced.github.com/pyalgotrade/docs/v0.10/html/_sources/compinvpart1.txt" rel="nofollow">Show Source</a></li>
  </ul>
<div id="searchbox" style="">
  <h3>Quick search</h3>
    <form class="search" action="search.html" method="get">
      <input name="q" type="text">
      <input value="Go" type="submit">
      <input name="check_keywords" value="yes" type="hidden">
      <input name="area" value="default" type="hidden">
    </form>
    <p class="searchtip" style="font-size: 90%">
    Enter search terms or a module, class or function name.
    </p>
</div>
<script type="text/javascript">$('#searchbox').show(0);</script>
        </div>
      </div>
      <div class="clearer"></div>
    </div>
    <div class="related">
      <h3>Navigation</h3>
      <ul>
        <li class="right" style="margin-right: 10px">
          <a href="http://gbeced.github.com/pyalgotrade/docs/v0.10/html/genindex.html" title="General Index">index</a></li>
        <li class="right">
          <a href="http://gbeced.github.com/pyalgotrade/docs/v0.10/html/py-modindex.html" title="Python Module Index">modules</a> |</li>
        <li class="right">
          <a href="http://gbeced.github.com/pyalgotrade/docs/v0.10/html/talib.html" title="TA-Lib integration">previous</a> |</li>
        <li><a href="http://gbeced.github.com/pyalgotrade/docs/v0.10/html/index.html">PyAlgoTrade 0.10 documentation</a> »</li> 
      </ul>
    </div>
    <div class="footer">
        © Copyright 2011, Gabriel Martín Becedillas Ruiz.
      Created using <a href="http://sphinx.pocoo.org/">Sphinx</a> 1.1.3.
    </div>
  
</body></html>